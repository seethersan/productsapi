# Generated by Django 2.1.1 on 2020-07-23 10:48

import django.core.validators
from django.db import migrations, models
import products.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2, 'Invalid brand name'), django.core.validators.MaxLengthValidator(30, 'Invalid brand name')])),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(3, 'Invalid category name'), django.core.validators.MaxLengthValidator(55, 'Invalid category name')])),
                ('description', models.CharField(max_length=250, validators=[django.core.validators.MinLengthValidator(3, 'Invalid category description'), django.core.validators.MaxLengthValidator(250, 'Invalid category description')])),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(3, 'Invalid product name'), django.core.validators.MaxLengthValidator(55, 'Invalid product name')])),
                ('value', models.FloatField(validators=[products.models.validate_value])),
                ('discount_value', models.FloatField()),
                ('stock', models.IntegerField(validators=[products.models.validate_stock])),
                ('brands', models.ManyToManyField(to='products.Brand')),
                ('categories', models.ManyToManyField(to='products.Category')),
            ],
        ),
    ]
